# (C) Copyright 2023 - @sunmods
# scope: hikka_only
# meta developer: @sunmods

from telethon import types 
from .. import loader, utils 
from typing import * 
import asyncio 
 
@loader.tds 
class NexxCasinoMod(loader.Module): 
    '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞ –≤ @NexxRevengeBot' 
 
    strings = { 
        'name':'NexxCasino' 
    } 
     
    start: int = 0 
    last: int = 0 
    loses: int = 0 
    is_started: bool = False 
    bot: str = '@NexxRevengeBot' 
    bot_id: int = 5837228831
     
    async def gstartcmd(self, m: types.Message): 
        '<—Å—É–º–º–∞> - –Ω–∞—á–∞—Ç—å —Å —Å—É–º–º–æ–π —Å—Ç–∞–≤–∫–∏' 
        args: str = utils.get_args_raw(m) 
        if self.is_started: 
            return await utils.answer(m, 'üôÉ –£–∂–µ –∑–∞–ø—É—â—ë–Ω! –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–≤–µ–¥–∏ <code>.gstop</code>') 
        try: 
            self.last = int(args) 
            self.start = int(args) 
            self.loses = 0 
        except: 
            return await utils.answer(m, '–í–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ') 
        self.is_started = True 
        await m.client.send_message(self.bot, "–∫–∞–∑–∏–Ω–æ {} ".format(self.start)) 
        await utils.answer(m, '‚úÖ <b>–ê–≤—Ç–æ–∏–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ! –ù–∞—á–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞:</b> <code>{}</code>'.format(self.start)) 
 
    async def gstopcmd(self, m: types.Message): 
        '.gstop - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–∑–∏–Ω–æ' 
        if not self.is_started: 
            return await utils.answer(m, '‚ùå <b>–ù–µ –∑–∞–ø—É—â–µ–Ω–æ! –ò—Å–ø–æ–ª—å–∑—É–π:</b> <code>.gstart <—Å—É–º–º–∞></code>') 
        self.is_started = False 
        await utils.answer(m, '‚õî <b>–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!</b>') 
     
    async def watcher(self, m: types.Message): 
        if not isinstance(m, types.Message): 
            return 
        if not hasattr(m.peer_id, 'user_id'): 
            return 
        chat = m.peer_id.user_id 
        if chat == self.bot_id and not m.out and self.is_started: 
            if '–≤—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏' in m.raw_text: 
                await asyncio.sleep(4) 
                self.loses = 0 
                self.last = self.start 
                await m.client.send_message(self.bot, "–∫–∞–∑–∏–Ω–æ {} ".format(self.last)) 
            elif '–æ—Å—Ç–∞—é—Ç—Å—è' in m.raw_text: 
                await asyncio.sleep(4) 
                self.loses = 0 
                await m.client.send_message(self.bot, "–∫–∞–∑–∏–Ω–æ {} ".format(self.last)) 
            elif '–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏' in m.raw_text or '–ø—Ä–æ–∏–≥—Ä–∞–ª–∏' in m.raw_text: 
                await asyncio.sleep(4) 
                if self.loses >= 15: 
                    self.loses = 0 
                    self.last = self.start 
                else: 
                    self.last *= 3
                    self.loses += 1 
                await m.client.send_message(self.bot, "–∫–∞–∑–∏–Ω–æ {} ".format(self.last)) 
            elif '–ü—É—Ç–∏–Ω, —É –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥!' in m.raw_text: 
                await asyncio.sleep(4) 
                self.last = self.start 
                self.loses = 0 
                await m.client.send_message(self.bot, "–∫–∞–∑–∏–Ω–æ {} ".format(self.last))
